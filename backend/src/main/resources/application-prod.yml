spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/dbmodeling_prod}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      idle-timeout: 600000
      connection-timeout: 30000
      validation-timeout: 5000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      
  jpa:
    hibernate:
      ddl-auto: validate # 프로덕션에서는 스키마 검증만
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        generate_statistics: false
        jdbc:
          time_zone: UTC
          batch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    open-in-view: false

  sql:
    init:
      mode: never

logging:
  level:
    com.dbmodeling: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.springframework.transaction: WARN
    org.springframework.orm.jpa: WARN
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/dbmodeling/application.log
    max-size: 100MB
    max-history: 30

server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

springdoc:
  swagger-ui:
    enabled: false # 프로덕션에서는 비활성화
  api-docs:
    enabled: false

app:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}
  validation:
    enabled: true
    strict-mode: true
  export:
    max-file-size: 50MB
    temp-directory: /tmp/dbmodeling-exports
  security:
    jwt:
      secret: ${JWT_SECRET}
      expiration: 86400000 # 24시간