spring:
  application:
    name: database-modeling-tool
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
    
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
    default-property-inclusion: non_null
    
  # 데이터베이스 설정
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/dbmodeling_dev}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:5}
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1800000
      auto-commit: true
      pool-name: DBModelingHikariCP
      connection-test-query: SELECT 1
      
  # JPA 설정
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        show_sql: ${SHOW_SQL:false}
        use_sql_comments: true
        jdbc:
          batch_size: 50
          batch_versioned_data: true
          time_zone: UTC
        order_inserts: true
        order_updates: true
        generate_statistics: ${HIBERNATE_STATS:false}
        connection:
          provider_disables_autocommit: false
        
  # Flyway 마이그레이션 설정
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
    displayRequestDuration: true
  show-actuator: false
  group-configs:
    - group: 'database-modeling-api'
      display-name: 'Database Modeling API'
      paths-to-match: '/api/**'
      packages-to-scan: 'com.dbmodeling.presentation.controller'

# 공통 애플리케이션 설정
app:
  name: Database Modeling Tool
  version: 1.0.0
  description: MSSQL 데이터베이스 모델링 도구
  
  # CORS 설정
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}